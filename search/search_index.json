{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-my-technical-documentation-portfolio","title":"Welcome to My Technical Documentation Portfolio","text":"<p>Welcome! This is a personal documentation site created as part of my journey to become a professional Technical Writer.</p> <p>The goal of this site is to demonstrate my understanding of technical writing principles using modern documentation tools and practices, especially the Docs-as-Code approach.</p>"},{"location":"#what-youll-find-here","title":"\ud83d\udcda What You\u2019ll Find Here","text":"<p>This site contains structured, beginner-friendly documentation created using MkDocs \u2014 a powerful static site generator for technical documentation.</p> <p>Here are the main sections you can explore:</p> <ul> <li> <p>About MKDocs   Understand the purpose of this project and discover how MkDocs simplifies the process of building modern, user-friendly documentation websites.</p> </li> <li> <p>Installation Tutorial   Step-by-step guide on how to install MkDocs on your local machine.</p> </li> <li> <p>Usage Guide   Learn how to preview, manage, and improve documentation using MkDocs \u2014 from basic setup to advanced customization.</p> </li> </ul>"},{"location":"#tools-and-technologies-used","title":"\ud83d\udee0\ufe0f Tools and Technologies Used","text":"<ul> <li>MkDocs \u2014 for generating static documentation sites  </li> <li>Markdown \u2014 for writing clean, readable content  </li> <li>Visual Studio Code \u2014 as a code and content editor  </li> <li>Git &amp; GitHub \u2014 for version control and publishing  </li> <li>Material for MkDocs \u2014 for professional UI and features</li> </ul>"},{"location":"#about-me","title":"\ud83d\udc64 About Me","text":"<p>My name is Bahrul ! I'm an aspiring technical writer with a strong interest in documentation, developer experience, and open source collaboration. This portfolio is an example of my ability to structure and deliver clear, useful documentation for real-world tools.</p>"},{"location":"#start-exploring","title":"\ud83d\udcce Start Exploring","text":"<p>\ud83d\udc49 If you\u2019re new, begin with the Installation Tutorial. \ud83d\udc49 Already installed? Go to the Usage Guide.</p> <p>Thank you for visiting!</p>"},{"location":"about/","title":"About","text":""},{"location":"about/#about-this-project","title":"About This Project","text":"<p>MkDocs is a modern static site generator that allows you to create beautiful, fast, and searchable documentation websites using simple Markdown files.</p> <p>This project is dedicated to exploring how MkDocs works and demonstrating how it can be used to build professional documentation without complex coding. It serves both as a personal learning journey and a showcase of technical writing practices using MkDocs.</p>"},{"location":"about/#what-is-mkdocs","title":"\ud83d\udcd8 What is MkDocs?","text":"<p>MkDocs is a documentation tool built with Python. It takes plain text files written in Markdown and transforms them into a structured, styled website.</p> <p>Some of its key features include:</p> <ul> <li>\ud83e\udde9 Simple Workflow: Just write in Markdown, organize your files, and MkDocs takes care of the rest.</li> <li>\ud83c\udfa8 Clean Design: Comes with modern themes (like \"Material for MkDocs\") that look great by default.</li> <li>\u26a1 Live Preview: You can see changes instantly as you write, using <code>mkdocs serve</code>.</li> <li>\ud83d\udd0d Built-in Search: Your users can search across your documentation without any additional setup.</li> <li>\ud83d\ude80 Deploy Anywhere: Easily publish your site online using GitHub Pages or other static hosting platforms.</li> </ul>"},{"location":"about/#why-use-mkdocs","title":"\ud83d\udca1 Why Use MkDocs?","text":"<p>MkDocs is especially useful for:</p> <ul> <li>Technical writers and developers who want to maintain documentation alongside code.</li> <li>Teams who use Git-based workflows and want their docs version-controlled.</li> <li>Projects that need clean, lightweight, and fast-loading documentation websites.</li> </ul> <p>Compared to traditional tools like Word or PDFs, MkDocs offers:</p> <ul> <li>Better collaboration using Git</li> <li>Consistent structure across pages</li> <li>Easy updates with version control</li> <li>User-friendly navigation and search</li> </ul>"},{"location":"about/#project-goal","title":"\ud83c\udfaf Project Goal","text":"<p>The goal of this project is to:</p> <ul> <li>Understand and practice using MkDocs from scratch</li> <li>Apply Docs-as-Code principles (write docs like code, using version control)</li> <li>Demonstrate a professional documentation setup suitable for real-world use</li> <li>Create a reusable structure for future documentation projects</li> </ul> <p>\ud83d\udccc Ready to get started?</p> <p>\ud83d\udc49 Follow the MkDocs Installation Guide</p>"},{"location":"install/installations/","title":"Install Tutorial","text":""},{"location":"install/installations/#what-is-mkdocs","title":"What is MkDocs","text":"<p>MkDocs is a modern, fast, and lightweight static site generator designed for creating project documentation. It allows you to write your content in Markdown and build a full-featured website with just a few commands.</p> <p>Whether you're documenting an open-source project or creating internal manuals, MkDocs makes the process smooth and efficient.</p>"},{"location":"install/installations/#installation-on-windows-linux","title":"\u2699\ufe0f Installation on Windows &amp; Linux","text":"<p>Follow the steps below to install MkDocs on your computer. You only need a working Python environment and internet connection.</p> Windowslinux <ol> <li>Download the latest version of Python from python.org</li> <li>Run the installer. IMPORTANT: Make sure to check the box \"Add Python to PATH\"</li> <li>Open the Command Prompt:<ul> <li>Press <code>Windows + R</code></li> <li>Type <code>cmd</code> and press Enter</li> </ul> </li> <li>Check if Python is installed:     Type: <code>python --version</code>     If successful, it will return a version like <code>Python 3.11.5</code></li> <li>Install MkDocs using pip:     <code>pip install mkdocs</code></li> <li>Verify MkDocs installation:     <code>mkdocs --version</code>     You should see the version of MkDocs installed.</li> </ol> <p>Note</p> <p>If Python is not recognized, try reinstalling it and ensure \"Add to PATH\" is checked during setup.</p> <ol> <li>Update your package manager (recommended):     <code>sudo apt update</code></li> <li>Install Python and pip (Python\u2019s package manager):     <code>sudo apt install python3 python3-pip</code></li> <li>Check your Python version:     <code>python3 --version</code>     It should display something like <code>Python 3.10.12</code></li> <li>Install MkDocs:     <code>pip3 install mkdocs</code></li> <li>Verify installation:     <code>mkdocs --version</code>     If successful, the installed version will appear.</li> </ol> <p>Note</p> <p>You may need to use <code>python3</code> and <code>pip3</code> instead of <code>python</code> and <code>pip</code> on Linux.</p>"},{"location":"install/installations/#basic-mkdocs-commands","title":"\ud83d\udd27 Basic MkDocs Commands","text":"<p>Here are some essential MkDocs commands you\u2019ll use regularly:</p> <ul> <li><code>mkdocs new \"project_name\"</code> \u2013 Create a new MkDocs project folder  </li> <li><code>mkdocs serve</code> \u2013 Start a live preview server at <code>localhost:8000</code> </li> <li><code>mkdocs build</code> \u2013 Build the static site into the <code>site/</code> folder  </li> <li><code>mkdocs --version</code> \u2013 Display the installed version of MkDocs</li> </ul>"},{"location":"install/installations/#common-installation-issues","title":"\ud83d\udea8 Common Installation Issues","text":"<p>\u274c Problem: <code>'python' is not recognized as an internal or external command</code></p> <p>\u2705 Solution: This usually means Python wasn't added to your system PATH. Reinstall Python and make sure to check \"Add Python to PATH\" during installation.</p> <p>With MkDocs installed, you're now ready to start building beautiful documentation sites with just Markdown and a few commands. \ud83c\udf89</p>"},{"location":"usage/advanced/","title":"Advanced","text":""},{"location":"usage/advanced/#advanced-usage-of-mkdocs","title":"Advanced Usage of MkDocs","text":"<p>Once you're comfortable running MkDocs locally and editing basic Markdown files, you can take your documentation to the next level using more advanced features. This section introduces several powerful capabilities that help make your documentation more organized, attractive, and maintainable.</p>"},{"location":"usage/advanced/#using-themes","title":"\ud83c\udfa8 Using Themes","text":"<p>MkDocs supports themes to change the appearance of your site. The most popular and widely used theme is Material for MkDocs, which offers:</p> <ul> <li>Responsive design for mobile and desktop</li> <li>Built-in search functionality</li> <li>Tabs, collapsible sections, and icons</li> <li>Enhanced Markdown support</li> </ul>"},{"location":"usage/advanced/#how-to-install-material-for-mkdocs","title":"How to install Material for MkDocs:","text":"<pre><code>pip install mkdocs-material\n</code></pre> <p>Then, update your <code>mkdocs.yml</code> configuration:</p> <pre><code>theme:\n  name: material\n</code></pre>"},{"location":"usage/advanced/#using-plugins","title":"\ud83e\udde9 Using Plugins","text":"<p>Plugins allow you to extend MkDocs functionality, such as:</p> <ul> <li>Generating tables of contents</li> <li>Creating image galleries</li> <li>Automatic navigation</li> <li>Better Markdown features</li> </ul> <p>To use a plugin, install it via <code>pip</code> and enable it in <code>mkdocs.yml</code>:</p> <pre><code>pip install mkdocs-awesome-pages-plugin\n</code></pre> <p>Example <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - search\n  - awesome-pages\n</code></pre>"},{"location":"usage/advanced/#organizing-your-documentation","title":"\ud83e\uddf1 Organizing Your Documentation","text":"<p>For larger projects, it's important to structure your documentation clearly. Group related content using folders inside the <code>docs/</code> directory.</p> <p>Example structure:</p> <pre><code>docs/\n\u251c\u2500\u2500 index.md\n\u251c\u2500\u2500 about.md\n\u251c\u2500\u2500 install/\n\u2502   \u2514\u2500\u2500 installations.md\n\u251c\u2500\u2500 usage/\n\u2502   \u251c\u2500\u2500 intro.md\n\u2502   \u2514\u2500\u2500 advanced.md\n</code></pre> <p>Then configure the navigation in <code>mkdocs.yml</code>:</p> <pre><code>nav:\n  - Home: index.md\n  - About: about.md\n  - Install Tutorial: install/installations.md\n  - Usage:\n      - Intro: usage/intro.md\n      - Advanced: usage/advanced.md\n</code></pre>"},{"location":"usage/advanced/#static-files-images-logos-etc","title":"\ud83d\udcc1 Static Files (Images, Logos, etc.)","text":"<p>To include logos or images in your documentation:</p> <ol> <li>Create an <code>images/</code> folder inside <code>docs/</code></li> <li>Add your image files (e.g. <code>logo.png</code>)</li> <li>Reference them in Markdown:</li> </ol> <pre><code>![Logo](images/logo.png)\n</code></pre>"},{"location":"usage/advanced/#publishing-with-github-pages","title":"\ud83c\udf10 Publishing with GitHub Pages","text":"<p>Once you're happy with your documentation, you can publish it online for free using GitHub Pages.</p> <p>Steps:</p> <ol> <li> <p>In your terminal, run:    <code>bash    mkdocs build</code></p> </li> <li> <p>Then deploy with:    <code>bash    mkdocs gh-deploy</code></p> </li> <li> <p>Your site will be live at:    <code>https://yourusername.github.io/your-repo-name/</code></p> </li> </ol> <p>Note: Make sure your repository is public and you\u2019ve enabled GitHub Pages in your repository settings.</p>"},{"location":"usage/advanced/#summary","title":"\u2705 Summary","text":"<p>With advanced features like themes, plugins, structured navigation, and GitHub Pages deployment, MkDocs becomes a powerful tool for creating professional, scalable documentation.</p> <p>As a technical writer, mastering these tools not only improves the user experience but also demonstrates your ability to deliver high-quality documentation at scale.</p>"},{"location":"usage/intro/","title":"Intro","text":""},{"location":"usage/intro/#getting-started-with-mkdocs","title":"Getting Started with MkDocs","text":"<p>MkDocs is a static site generator that helps you create professional documentation websites from plain text files. It\u2019s specifically designed for technical documentation and widely used in both open-source and enterprise environments.</p> <p>One of MkDocs' greatest advantages is its simplicity. You write in Markdown, a lightweight and easy-to-learn markup language, and MkDocs turns it into a fully functional website.</p> <p>This guide walks you through how to run MkDocs for the first time on your local machine.</p>"},{"location":"usage/intro/#requirements","title":"\ud83d\udee0\ufe0f Requirements","text":"<p>Before getting started, make sure you have:</p> <ul> <li>Python 3.x</li> <li><code>pip</code> (Python package installer)</li> <li>MkDocs installed via pip:</li> </ul> <p><code>bash   pip install mkdocs</code></p> <ul> <li>A text editor (e.g., Visual Studio Code)</li> <li>A terminal application (e.g., Git Bash, CMD, or Terminal)</li> </ul> <p>Once these are ready, you can start working with MkDocs locally.</p>"},{"location":"usage/intro/#previewing-your-documentation-locally","title":"\ud83d\ude80 Previewing Your Documentation Locally","text":"<p>To see your documentation site in your browser:</p> <ol> <li> <p>Open your terminal or command prompt.</p> </li> <li> <p>Navigate to your MkDocs project folder. For example:</p> </li> </ol> <p><code>bash    cd C:\\Users\\YourName\\technical-writing-portfolio\\mkdocs-guide</code></p> <ol> <li>Start the development server:</li> </ol> <p><code>bash    mkdocs serve</code></p> <ol> <li>Open your browser and visit:</li> </ol> <p><code>http://127.0.0.1:8000/</code></p> <p>You should now see your documentation site live.</p>"},{"location":"usage/intro/#real-time-editing","title":"\ud83d\udd01 Real-Time Editing","text":"<p>While the development server is running, you can edit any <code>.md</code> file inside the <code>docs/</code> folder. MkDocs will automatically detect changes, rebuild the site, and refresh the browser \u2014 a feature known as live reload. This makes the editing process smooth and immediate.</p>"},{"location":"usage/intro/#why-local-preview-matters","title":"\ud83d\udccc Why Local Preview Matters","text":"<p>Previewing your documentation locally allows you to:</p> <ul> <li>Verify layout and structure before publishing</li> <li>Catch formatting issues early</li> <li>Improve the reading experience</li> <li>Apply quick changes without deploying</li> </ul> <p>This workflow follows modern Docs-as-Code practices, where documentation is treated like source code \u2014 stored in plain text, version-controlled, and collaboratively edited.</p>"},{"location":"usage/intro/#summary","title":"\u2705 Summary","text":"<p>You\u2019ve just learned how to:</p> <ul> <li>Set up your environment for MkDocs</li> <li>Run your documentation site locally</li> <li>Edit content with instant results</li> </ul> <p>You're now ready to move forward and explore more advanced features.</p> <p>\u27a1\ufe0f Continue to: Advanced Usage</p>"}]}